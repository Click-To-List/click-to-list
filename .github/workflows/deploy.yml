name: Deploy CTL Nodse API via OIDC + SSM

on:
  push:
    branches: [ dev, staging, main ]

permissions:
  id-token: write   # REQUIRED for OIDC
  contents: read

env:
  APP_NAME: ctl-api
  #ARTIFACT_BUCKET: my-ci-artifacts-bucket
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Map branch -> env -> role -> instance tag
    strategy:
      matrix:
        include:
          - branch: dev
            environment: dev
            role_arn: ${{ secrets.AWS_ROLE_DEV_ARN }}
            ssm_env: dev
            target_env_tag: dev
          - branch: stage
            environment: staging
            role_arn: ${{ secrets.AWS_ROLE_STAGING_ARN }}
            ssm_env: staging
            target_env_tag: staging
          - branch: main
            environment: prod
            role_arn: ${{ secrets.AWS_ROLE_PROD_ARN }}
            ssm_env: prod
            target_env_tag: prod

    if: contains(fromJson('["refs/heads/dev","refs/heads/stage","refs/heads/main"]'), github.ref)

    environment: ${{ matrix.environment }}

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Run tests
        run: npm test --if-present

      - name: Build
        run: npm run build --if-present

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ matrix.role_arn }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Trigger SSM deploy on target instances
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy $APP_NAME $GITHUB_SHA" \
            --targets "Key=tag:Environment,Values=${{ matrix.target_env_tag }}" "Key=tag:App,Values=${{ env.APP_NAME }}" \
            --parameters 'commands=["sudo /opt/your-api/deploy.sh s3://${{ env.ARTIFACT_BUCKET }}/${{ env.APP_NAME }}/${{ github.sha }}.tar.gz ${{ matrix.ssm_env }}"]' \
            --timeout-seconds 600 \
            --max-concurrency "1" \
            --max-errors "0" \
            --region ${{ env.AWS_REGION }}
